{"ast":null,"code":"var _jsxFileName = \"/Users/hrithiksingh/Desktop/whatsApp/whatsappclone/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Sidebar from \"./sidebar\";\nimport Chat from \"./Chat\";\nimport Pusher from \"pusher-js\"; // import axios from './axios';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Axios is a popular, promise-based HTTP client that sports an easy-to-use API and can be used in both the browser and Node. js. Making HTTP requests to fetch or save data is one of the most common tasks a client-side JavaScript application will need to do.\n  const [messages, setmessages] = useState([]); // useEffect(()=>{\n  //   axios.get('/messages/sync').then(response => {\n  //       //storing\n  //       setmessages(response.data);   //data here is message which we want to fetch\n  //     })\n  // }, []);\n\n  useEffect(() => {\n    //whenevr we attach listner we want it to use once thats what empty bracket says\n    const pusher = new Pusher('6019724800ee9b7941b5', {\n      cluster: 'ap2'\n    });\n    const channel = pusher.subscribe('message');\n    channel.bind('inserted', function (data) {\n      console.log(data);\n      setmessages(previous => {\n        return [...previous, data];\n      });\n    });\n  }, []); // console.log(messages);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App_body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aaYIUjPVJlhmWR7ZSFtemlfRmho=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hrithiksingh/Desktop/whatsApp/whatsappclone/src/components/App.jsx"],"names":["React","useEffect","useState","Sidebar","Chat","Pusher","App","messages","setmessages","pusher","cluster","channel","subscribe","bind","data","console","log","previous"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CAHa,CAKb;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMQ,MAAM,GAAG,IAAIJ,MAAJ,CAAW,sBAAX,EAAmC;AAChDK,MAAAA,OAAO,EAAE;AADuC,KAAnC,CAAf;AAIA,UAAMC,OAAO,GAAGF,MAAM,CAACG,SAAP,CAAiB,SAAjB,CAAhB;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyB,UAASC,IAAT,EAAe;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,WAAW,CAACS,QAAQ,IAAG;AACrB,eAAM,CAAC,GAAGA,QAAJ,EAAaH,IAAb,CAAN;AACD,OAFU,CAAX;AAGD,KALD;AAMD,GAbQ,EAaP,EAbO,CAAT,CAZa,CA0Bb;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArCQR,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React , { useEffect, useState} from \"react\";\nimport './App.css';\nimport Sidebar from \"./sidebar\";\nimport Chat from \"./Chat\";\nimport Pusher from \"pusher-js\";\n// import axios from './axios';\n\nfunction App() {\n  //Axios is a popular, promise-based HTTP client that sports an easy-to-use API and can be used in both the browser and Node. js. Making HTTP requests to fetch or save data is one of the most common tasks a client-side JavaScript application will need to do.\n\n  const [messages, setmessages] = useState([]);\n\n  // useEffect(()=>{\n  //   axios.get('/messages/sync').then(response => {\n  //       //storing\n  //       setmessages(response.data);   //data here is message which we want to fetch\n  //     })\n  // }, []);\n\n  useEffect(() => {\n    //whenevr we attach listner we want it to use once thats what empty bracket says\n    const pusher = new Pusher('6019724800ee9b7941b5', {\n      cluster: 'ap2'\n    });\n\n    const channel = pusher.subscribe('message');\n    channel.bind('inserted', function(data) {\n      console.log(data);\n      setmessages(previous =>{\n        return[...previous,data];\n      });\n    });\n  },[]);\n  // console.log(messages);\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App_body\">\n        <Sidebar/>\n        <Chat/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}