{"ast":null,"code":"var _jsxFileName = \"/Users/hrithiksingh/Desktop/whatsApp/whatsappclone/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Sidebar from \"./sidebar\";\nimport Chat from \"./Chat\";\nimport Pusher from \"pusher-js\";\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Axios is a popular, promise-based HTTP client that sports an easy-to-use API and can be used in both the browser and Node. js. Making HTTP requests to fetch or save data is one of the most common tasks a client-side JavaScript application will need to do.\n  const [messages, setmessages] = useState([]);\n  useEffect(() => {\n    axios.get('/message/sync').then(response => {\n      //storing\n      setmessages(response.data); //data here is message which we want to fetch\n    });\n  }, []);\n  useEffect(() => {\n    //whenevr we attach listner we want it to use once thats what empty bracket says\n    const pusher = new Pusher('6019724800ee9b7941b5', {\n      cluster: 'ap2'\n    });\n    const channel = pusher.subscribe('messages'); //message here is channel name\n\n    channel.bind('inserted', function (data) {\n      setmessages([...messages, data]);\n    }); //clean up function when message change we only have one subscriber\n\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  }, [messages]); //messages added here as dependency because we are using here messages otherwise code here\n\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App_body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        msg: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Fl7FSatvgtiTnj2/nUNyXdL6rKk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hrithiksingh/Desktop/whatsApp/whatsappclone/src/components/App.jsx"],"names":["React","useEffect","useState","Sidebar","Chat","Pusher","axios","App","messages","setmessages","get","then","response","data","pusher","cluster","channel","subscribe","bind","unbind_all","unsubscribe","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,KAAK,CAACI,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAgCC,QAAQ,IAAI;AACxC;AACAH,MAAAA,WAAW,CAACG,QAAQ,CAACC,IAAV,CAAX,CAFwC,CAEV;AAC/B,KAHH;AAID,GALQ,EAKN,EALM,CAAT;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMa,MAAM,GAAG,IAAIT,MAAJ,CAAW,sBAAX,EAAmC;AAChDU,MAAAA,OAAO,EAAE;AADuC,KAAnC,CAAf;AAIA,UAAMC,OAAO,GAAGF,MAAM,CAACG,SAAP,CAAiB,UAAjB,CAAhB,CANc,CAMsC;;AACpDD,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyB,UAASL,IAAT,EAAe;AACtCJ,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaK,IAAb,CAAD,CAAX;AACD,KAFD,EAPc,CAUd;;AACA,WAAM,MAAI;AACRG,MAAAA,OAAO,CAACG,UAAR;AACAH,MAAAA,OAAO,CAACI,WAAR;AACD,KAHD;AAID,GAfQ,EAeP,CAACZ,QAAD,CAfO,CAAT,CAZa,CA2BG;;AAEhBa,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,GAAG,EAAEA;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAvCQD,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React , { useEffect, useState} from \"react\";\nimport './App.css';\nimport Sidebar from \"./sidebar\";\nimport Chat from \"./Chat\";\nimport Pusher from \"pusher-js\";\nimport axios from './axios';\n\nfunction App() {\n  //Axios is a popular, promise-based HTTP client that sports an easy-to-use API and can be used in both the browser and Node. js. Making HTTP requests to fetch or save data is one of the most common tasks a client-side JavaScript application will need to do.\n\n  const [messages, setmessages] = useState([]);\n\n  useEffect(()=>{\n    axios.get('/message/sync').then(response => {\n        //storing\n        setmessages(response.data);   //data here is message which we want to fetch\n      })\n  }, []);\n\n  useEffect(() => {\n    //whenevr we attach listner we want it to use once thats what empty bracket says\n    const pusher = new Pusher('6019724800ee9b7941b5', {\n      cluster: 'ap2'\n    });\n\n    const channel = pusher.subscribe('messages');       //message here is channel name\n    channel.bind('inserted', function(data) {\n      setmessages([...messages,data]);\n    });\n    //clean up function when message change we only have one subscriber\n    return()=>{\n      channel.unbind_all();\n      channel.unsubscribe();\n    }\n  },[messages]);  //messages added here as dependency because we are using here messages otherwise code here\n\n  console.log(messages);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App_body\">\n        <Sidebar/>\n        <Chat msg={messages}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}