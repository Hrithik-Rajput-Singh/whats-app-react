{"ast":null,"code":"var _jsxFileName = \"/Users/hrithiksingh/Desktop/whatsappclone/whatsappclone/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Sidebar from \"./sidebar\";\nimport Chat from \"./Chat\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Axios is a popular, promise-based HTTP client that sports an easy-to-use API and can be used in both the browser and Node. js. Making HTTP requests to fetch or save data is one of the most common tasks a client-side JavaScript application will need to do.\n  const [messages, setmessages] = useState([]);\n  useEffect(() => {\n    axios.get('/messages/sync').then(response => {\n      console.log(response.data); //storing\n\n      setmessages(response.data); //data here is message which we want to fetch\n    });\n  }, []);\n  useEffect(() => {\n    //whenevr we attach listner we want it to use once thats what empty bracket says\n    const pusher = new Pusher('6019724800ee9b7941b5', {\n      cluster: 'ap2'\n    });\n    const channel = pusher.subscribe('message');\n    channel.bind('inserted', function (data) {\n      alert(JSON.stringify(data));\n      console.log(data);\n    });\n  }, []);\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App_body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Fl7FSatvgtiTnj2/nUNyXdL6rKk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hrithiksingh/Desktop/whatsappclone/whatsappclone/src/components/App.jsx"],"names":["React","useEffect","useState","Sidebar","Chat","Pusher","axios","App","messages","setmessages","get","then","response","console","log","data","pusher","cluster","channel","subscribe","bind","alert","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA6BC,QAA7B,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,KAAK,CAACI,GAAN,CAAU,gBAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADgB,CAEhB;;AACAN,MAAAA,WAAW,CAACG,QAAQ,CAACG,IAAV,CAAX,CAHgB,CAGa;AAC9B,KALH;AAMD,GAPQ,EAOP,EAPO,CAAT;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMe,MAAM,GAAG,IAAIX,MAAJ,CAAW,sBAAX,EAAmC;AAChDY,MAAAA,OAAO,EAAE;AADuC,KAAnC,CAAf;AAIA,UAAMC,OAAO,GAAGF,MAAM,CAACG,SAAP,CAAiB,SAAjB,CAAhB;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb,EAAyB,UAASL,IAAT,EAAe;AACtCM,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAD,CAAL;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,KAHD;AAID,GAXQ,EAWP,EAXO,CAAT;AAYAF,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAjCQD,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React , { useEffect , useState} from \"react\";\nimport './App.css';\nimport Sidebar from \"./sidebar\";\nimport Chat from \"./Chat\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\"\n\nfunction App() {\n  //Axios is a popular, promise-based HTTP client that sports an easy-to-use API and can be used in both the browser and Node. js. Making HTTP requests to fetch or save data is one of the most common tasks a client-side JavaScript application will need to do.\n  const [messages, setmessages] = useState([]);\n  useEffect(()=>{\n    axios.get('/messages/sync')\n      .then(response => {\n        console.log(response.data);  \n        //storing\n        setmessages(response.data)   //data here is message which we want to fetch\n      })\n  },[])\n  useEffect(() => {\n    //whenevr we attach listner we want it to use once thats what empty bracket says\n    const pusher = new Pusher('6019724800ee9b7941b5', {\n      cluster: 'ap2'\n    });\n\n    const channel = pusher.subscribe('message');\n    channel.bind('inserted', function(data) {\n      alert(JSON.stringify(data));\n      console.log(data);\n    });\n  },[]);\n  console.log(messages);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App_body\">\n        <Sidebar/>\n        <Chat/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}